@page "/EventEaseApp.github.io/register"
@using EventEaseApp.Models
@using EventEaseApp.Services
@inject EventService EventService

<style>
body { background: #e0e0e0; }
.register-container {
    background:#2c2c2c;color:white;
    padding:2rem;border-radius:1rem;
    width:100%;max-width:400px;margin:5vh auto;
}
.event-card input { width:100%; margin-bottom:1rem; padding:0.4rem; }
.validation-message { color: #ff8080; font-size: 0.9rem; }
</style>

<div class="register-container">
    <h2 class="text-center mb-4">Register Event</h2>

    <EditForm Model="eventModel" OnValidSubmit="RegisterEvent">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <EventCard
            EventName="@eventModel.Name"
            EventDate="@eventModel.Date"
            EventLocation="@eventModel.Location"
            EventDescription="@eventModel.Description"
            Color="@eventModel.Color"
            EventNameChanged="e => eventModel.Name = e"
            EventDateChanged="d => eventModel.Date = d"
            EventLocationChanged="l => eventModel.Location = l"
            EventDescriptionChanged="d => eventModel.Description = d"
            ColorChanged="c => eventModel.Color = c" />

        <div class="form-check my-2">
            <input class="form-check-input" type="checkbox" id="attendCheck" @bind="eventModel.IsAttending" />
            <label class="form-check-label" for="attendCheck">
                Will you attend?
            </label>
        </div>

        <button class="btn btn-success w-100" type="submit">Save Event</button>
    </EditForm>

    @if (!string.IsNullOrEmpty(feedbackMessage))
    {
        <div class="alert alert-info mt-3 text-center">@feedbackMessage</div>
    }

</div>

@code {
    private EventData eventModel = new EventData
    {
        Date = DateTime.Today
    };

    private string feedbackMessage = "";

    private void RegisterEvent()
    {
        try
        {
            EventService.AddEvent(eventModel);
            feedbackMessage = "Event registered successfully!";
            eventModel = new EventData
            {
                Date = DateTime.Today
            }; // Clear form with today's date
        }
        catch
        {
            feedbackMessage = "There was an error saving the event.";
        }
    }
}

